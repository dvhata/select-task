{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Button } from 'react-bootstrap';\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\"\n  }, {\n    id: 2,\n    name: \"Two\"\n  }, {\n    id: 3,\n    name: \"Three\"\n  }, {\n    id: 4,\n    name: \"Four\"\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  /* const selectResult = new Array(list_options.length); */\n\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(list_options[0]);\n  /* const [isChecked, setIsChecked] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  ); */\n\n  /* const [listSelect,setListSelect] = useState([]); */\n\n  const handleSingleSelectChange = useCallback(e => {\n    selectOption(e.target.value);\n  }, []);\n  const handleMultiSelectChange = useCallback((index, value) => {\n    console.log(index, value);\n    /* {selectedOption.map(options => {\r\n      console.log(options)\r\n    }) */\n\n    /* setIsChecked(!isChecked[index]);\r\n    console.log(index);\r\n    if (isChecked[index]) {\r\n      list_check.push(value)\r\n    }; */\n  }, []);\n\n  if (isMulti) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            value: option,\n            onChange: handleSingleSelectChange,\n            children: [\" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: options.name,\n              children: [\" \", options.name, \" \"]\n            }, options.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Your choice is: \", option, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pick your choices here:\", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: options.name,\n          onChange: handleMultiSelectChange\n          /*  checked={isChecked[options.id]} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), options.name]\n      }, options.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"checkbox\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DropdownComponent, \"PlD2wbo/ds5wLvibjv9l10yB5yo=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","Button","DropdownComponent","props","list_options","id","name","isMulti","option","selectOption","handleSingleSelectChange","e","target","value","handleMultiSelectChange","index","console","log","map","options"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { Button } from 'react-bootstrap'\r\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [\r\n    {\r\n      id: 1,\r\n      name: \"One\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  /* const selectResult = new Array(list_options.length); */\r\n  const { isMulti } = props;\r\n  const [option, selectOption] = useState(list_options[0]);\r\n  /* const [isChecked, setIsChecked] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  ); */\r\n  /* const [listSelect,setListSelect] = useState([]); */\r\n\r\n  const handleSingleSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []);\r\n\r\n  const handleMultiSelectChange = useCallback((index,value) => {\r\n    console.log (index, value);\r\n    /* {selectedOption.map(options => {\r\n      console.log(options)\r\n    }) */\r\n    /* setIsChecked(!isChecked[index]);\r\n    console.log(index);\r\n    if (isChecked[index]) {\r\n      list_check.push(value)\r\n    }; */\r\n  }, []);\r\n\r\n  if (isMulti) {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Pick your choice here:\r\n            <select className=\"custom-select\" value={option} onChange={handleSingleSelectChange}>\r\n              {\" \"}\r\n              {list_options.map((options) => (\r\n                <option key={options.id} value={options.name}>\r\n                  {\" \"}\r\n                  {options.name}{\" \"}\r\n                </option>\r\n              ))}{\" \"}\r\n            </select>{\" \"}\r\n          </label>{\" \"}\r\n        </form>{\" \"}\r\n        <div> Your choice is: {option} </div>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Pick your choices here:{\" \"}\r\n        {list_options.map((options) => (\r\n          <select key={options.id}>\r\n            <input type=\"checkbox\" value={options.name}\r\n              onChange={handleMultiSelectChange}\r\n             /*  checked={isChecked[options.id]} *//>{options.name}\r\n          </select>\r\n        ))}\r\n        {/* result:\r\n        {list_check.map((number) => {\r\n          <div>{number}</div>;\r\n        })} */}\r\n        <div>\r\n          <Button type=\"checkbox\" > </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}