{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\"\n  }, {\n    id: 2,\n    name: \"Two\"\n  }, {\n    id: 3,\n    name: \"Three\"\n  }, {\n    id: 4,\n    name: \"Four\"\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  const selectResult = new Array(list_options.length);\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(list_options[0]);\n  const [checkedState, setCheckedState] = useState(new Array(list_options.length).fill(false));\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\n\n  const handleMultiSelectChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : selectResult.push(item));\n    selectOption(updatedCheckedState);\n    setCheckedState(updatedCheckedState);\n    /* const handleSingleSelectChange = useCallback((e) => {\r\n      selectOption(e.target.value);\r\n    }, []); */\n\n    /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n    },) */\n\n    if (isMulti) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: option\n              /* onChange={handleSingleSelectChange} */\n              ,\n              children: [\" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: options.name,\n                children: [\" \", options.name, \" \"]\n              }, options.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Your choice is: \", option, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Pick your choices here:\", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: options.name,\n            check: isChecked,\n            onSelect: handleMultiSelectChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), \" \", options.name, \" \"]\n        }, options.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    }\n  };\n};\n\n_s(DropdownComponent, \"U8k0ZhL3v+8wC+bt7Vng8OJR5LQ=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","DropdownComponent","props","list_options","id","name","selectResult","Array","length","isMulti","option","selectOption","checkedState","setCheckedState","fill","handleMultiSelectChange","position","updatedCheckedState","map","item","index","push","options","isChecked"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [\r\n    {\r\n      id: 1,\r\n      name: \"One\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  const selectResult = new Array(list_options.length);\r\n  const { isMulti } = props;\r\n  const [option, selectOption] = useState(list_options[0]);\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  );\r\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\r\n\r\n  const handleMultiSelectChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : selectResult.push(item)\r\n    );\r\n    selectOption(updatedCheckedState);\r\n    setCheckedState(updatedCheckedState);\r\n\r\n    /* const handleSingleSelectChange = useCallback((e) => {\r\n      selectOption(e.target.value);\r\n    }, []); */\r\n\r\n    /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n   },) */\r\n\r\n    if (isMulti) {\r\n      return (\r\n        <div>\r\n          <form>\r\n            <label>\r\n              Pick your choice here:\r\n              <select value={option} /* onChange={handleSingleSelectChange} */>\r\n                {\" \"}\r\n                {list_options.map((options) => (\r\n                  <option key={options.id} value={options.name}>\r\n                    {\" \"}\r\n                    {options.name}{\" \"}\r\n                  </option>\r\n                ))}{\" \"}\r\n              </select>{\" \"}\r\n            </label>{\" \"}\r\n          </form>{\" \"}\r\n          <div> Your choice is: {option} </div>{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          Pick your choices here:{\" \"}\r\n          {list_options.map((options) => (\r\n            <div key={options.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={options.name}\r\n                check={isChecked}\r\n                onSelect={handleMultiSelectChange}\r\n              />{\" \"}\r\n              {options.name}{\" \"}\r\n            </div>\r\n          ))}{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}