{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\",\n    isChecked: false\n  }, {\n    id: 2,\n    name: \"Two\",\n    isChecked: false\n  }, {\n    id: 3,\n    name: \"Three\",\n    isChecked: false\n  }, {\n    id: 4,\n    name: \"Four\",\n    isChecked: false\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  var selectResult = new Array(list_options.length);\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(list_options[0]);\n  const [checkedState, setCheckedState] = useState(new Array(list_options.length).fill(false));\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\n\n  const handleMultiSelectChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : selectResult.push(item));\n    setCheckedState(updatedCheckedState);\n    /* const handleSingleSelectChange = useCallback((e) => {\r\n      selectOption(e.target.value);\r\n    }, []); */\n\n    /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n    },) */\n\n    if (isMulti) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: option\n              /* onChange={handleSingleSelectChange} */\n              ,\n              children: [\" \", \" \", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: options.name,\n                children: [\" \", \" \", \" \", options.name, \" \", \" \", \" \"]\n              }, options.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 43\n              }, this)), \" \", \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), \" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Your choice is: \", option, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Pick your choices here: \", \" \", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: options.name,\n            check: checkedState[options.id],\n            onChange: handleMultiSelectChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \" \", options.name, \" \"]\n        }, options.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 43\n        }, this)), \" \", \" \", \"Your choices: \", selectResult.map(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }, this);\n    }\n  };\n};\n\n_s(DropdownComponent, \"U8k0ZhL3v+8wC+bt7Vng8OJR5LQ=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","DropdownComponent","props","list_options","id","name","isChecked","selectResult","Array","length","isMulti","option","selectOption","checkedState","setCheckedState","fill","handleMultiSelectChange","position","updatedCheckedState","map","item","index","push","options"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useCallback\r\n} from \"react\";\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [{\r\n      id: 1,\r\n      name: \"One\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  var selectResult = new Array(list_options.length);\r\n  const {\r\n    isMulti\r\n  } = props;\r\n  const [option, selectOption] = useState(list_options[0]);\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  );\r\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\r\n\r\n  const handleMultiSelectChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : selectResult.push(item)\r\n    );\r\n\r\n    setCheckedState(updatedCheckedState);\r\n\r\n    /* const handleSingleSelectChange = useCallback((e) => {\r\n      selectOption(e.target.value);\r\n    }, []); */\r\n\r\n    /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n   },) */\r\n\r\n    if (isMulti) {\r\n      return ( <\r\n        div >\r\n        <\r\n        form >\r\n        <\r\n        label >\r\n        Pick your choice here:\r\n        <\r\n        select value = {\r\n          option\r\n        } /* onChange={handleSingleSelectChange} */ > {\r\n          \" \"\r\n        } {\r\n          list_options.map((options) => ( <\r\n            option key = {\r\n              options.id\r\n            }\r\n            value = {\r\n              options.name\r\n            } > {\r\n              \" \"\r\n            } {\r\n              options.name\r\n            } {\r\n              \" \"\r\n            } <\r\n            /option>\r\n          ))\r\n        } {\r\n          \" \"\r\n        } <\r\n        /select>{\" \"} <\r\n        /label>{\" \"} <\r\n        /form>{\" \"} <\r\n        div > Your choice is: {\r\n          option\r\n        } < /div>{\" \"} <\r\n        /div>\r\n      );\r\n    } else {\r\n      return ( <\r\n        div >\r\n        Pick your choices here: {\r\n          \" \"\r\n        } {\r\n          list_options.map((options) => ( <\r\n            div key = {\r\n              options.id\r\n            } >\r\n            <\r\n            input type = \"checkbox\"\r\n            value = {\r\n              options.name\r\n            }\r\n            check = {\r\n              checkedState[options.id]\r\n            }\r\n            onChange = {\r\n              handleMultiSelectChange\r\n            }\r\n            /> {\r\n              options.name\r\n            } <\r\n            /div>\r\n          ))\r\n        } {\r\n          \" \"\r\n        }\r\n        Your choices: {\r\n          selectResult.map()\r\n        } <\r\n        /div>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default DropdownComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}