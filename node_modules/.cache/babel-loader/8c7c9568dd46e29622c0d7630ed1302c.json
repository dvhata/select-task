{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\",\n    isChecked: false\n  }, {\n    id: 2,\n    name: \"Two\",\n    isChecked: false\n  }, {\n    id: 3,\n    name: \"Three\",\n    isChecked: false\n  }, {\n    id: 4,\n    name: \"Four\",\n    isChecked: false\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  var selectResult = new Array(list_options.length);\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(list_options[0]);\n  const [checkedState, setCheckedState] = useState(new Array(list_options.length).fill(false));\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\n\n  const handleMultiSelectChange = useCallback(position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n  }, []);\n  setCheckedState(updatedCheckedState);\n  selectResult.push(updatedCheckedState);\n  const handleSingleSelectChange = useCallback(e => {\n    selectOption(e.target.value);\n  }, []);\n  /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n   },) */\n\n  if (isMulti) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: option,\n            onChange: handleSingleSelectChange,\n            children: [\" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: options.name,\n              children: [\" \", options.name, \" \"]\n            }, options.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Your choice is: \", option, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pick your choices here:\", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: options.name,\n          check: checkedState[options.id],\n          onChange: handleMultiSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), options.name]\n      }, options.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), \" \", \"Your choices: \", selectResult.map()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DropdownComponent, \"NRsdQRCA9c+TCBFhKhg0QXxwi+w=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","DropdownComponent","props","list_options","id","name","isChecked","selectResult","Array","length","isMulti","option","selectOption","checkedState","setCheckedState","fill","handleMultiSelectChange","position","updatedCheckedState","map","item","index","push","handleSingleSelectChange","e","target","value","options"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [\r\n    {\r\n      id: 1,\r\n      name: \"One\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n      isChecked: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  var selectResult = new Array(list_options.length);\r\n  const { isMulti } = props;\r\n  const [option, selectOption] = useState(list_options[0]);\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  );\r\n  /*  const [selectResult, setSelectResult] = useState(\"\"); */\r\n\r\n  const handleMultiSelectChange = useCallback((position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n  }, []);\r\n  setCheckedState(updatedCheckedState);\r\n  selectResult.push(updatedCheckedState);\r\n\r\n  const handleSingleSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []);\r\n\r\n  /* const handleMultiSelectChange = useCallback((itemid) => {\r\n      setIsChecked(!isChecked)\r\n   },) */\r\n\r\n  if (isMulti) {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Pick your choice here:\r\n            <select value={option} onChange={handleSingleSelectChange}>\r\n              {\" \"}\r\n              {list_options.map((options) => (\r\n                <option key={options.id} value={options.name}>\r\n                  {\" \"}\r\n                  {options.name}{\" \"}\r\n                </option>\r\n              ))}{\" \"}\r\n            </select>{\" \"}\r\n          </label>{\" \"}\r\n        </form>{\" \"}\r\n        <div> Your choice is: {option} </div>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Pick your choices here:{\" \"}\r\n        {list_options.map((options) => (\r\n          <div key={options.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={options.name}\r\n              check={checkedState[options.id]}\r\n              onChange={handleMultiSelectChange}\r\n            />\r\n            {options.name}\r\n          </div>\r\n        ))}{\" \"}\r\n        Your choices: {selectResult.map()}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}