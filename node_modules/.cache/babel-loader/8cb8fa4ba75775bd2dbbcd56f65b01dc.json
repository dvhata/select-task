{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\"\n  }, {\n    id: 2,\n    name: \"Two\"\n  }, {\n    id: 3,\n    name: \"Three\"\n  }, {\n    id: 4,\n    name: \"Four\"\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(\"one\");\n  /*  const [checkedState, setCheckedState] = useState(new Array(list_options.length).fill(false));\r\n   const [selectResult, setSelectResult] = useState(\"\"); */\n\n  const handleSingleSelectChange = useCallback(e => {\n    selectOption(e.target.value);\n  }, []);\n  /* const handleMultiSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []); */\n\n  /* const handleOnChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n  setCheckedState(updatedCheckedState);\r\n  */\n\n  if (isMulti) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: option,\n            onChange: handleSingleSelectChange,\n            children: list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: options.name,\n              children: [\" \", options.name, \" \"]\n            }, options.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Your choice is: \", option]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pick your choice here:\", list_options.map(options => /*#__PURE__*/_jsxDEV(\"input\", {\n        value: options.name,\n        children: [\" \", options.name, \" \"]\n      }, options.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DropdownComponent, \"kuuL5iCmiEmY6WeytyMoV2kjp+0=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","DropdownComponent","props","list_options","id","name","isMulti","option","selectOption","handleSingleSelectChange","e","target","value","map","options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAEnC,QAAMC,YAAY,GAAG,CACnB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAC;AAFP,GADmB,EAKnB;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAC;AAFP,GALmB,EASnB;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAC;AAFP,GATmB,EAYjB;AACAD,IAAAA,EAAE,EAAE,CADJ;AAEAC,IAAAA,IAAI,EAAC;AAFL,GAZiB,EAejB;AACAD,IAAAA,EAAE,EAAE,CADJ;AAEAC,IAAAA,IAAI,EAAC;AAFL,GAfiB,CAArB;AAoBA,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,KAApB;AACA,QAAM,CAACK,MAAD,EAASC,YAAT,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;AACD;AACD;;AAGE,QAAMU,wBAAwB,GAAGT,WAAW,CAAEU,CAAD,IAAO;AAClDF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAF2C,EAEzC,EAFyC,CAA5C;AAIA;AACF;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;;AAEE,MAAIN,OAAJ,EAAa;AACX,wBACE;AAAA,8BACE;AAAA,gCACE;AAAA,4DAEE;AAAQ,YAAA,KAAK,EAAEC,MAAf;AAAuB,YAAA,QAAQ,EAAEE,wBAAjC;AAAA,sBACGN,YAAY,CAACU,GAAb,CAAkBC,OAAD,iBAChB;AAAyB,cAAA,KAAK,EAAEA,OAAO,CAACT,IAAxC;AAAA,8BAAgDS,OAAO,CAACT,IAAxD;AAAA,eAAaS,OAAO,CAACV,EAArB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF,EAMY,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQW,GARX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUU,GAVV,eAWE;AAAA,uCAAsBG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACL,wBACE;AAAA,2CAEKJ,YAAY,CAACU,GAAb,CAAkBC,OAAD,iBACZ;AAAwB,QAAA,KAAK,EAAEA,OAAO,CAACT,IAAvC;AAAA,wBAA+CS,OAAO,CAACT,IAAvD;AAAA,SAAYS,OAAO,CAACV,EAApB;AAAA;AAAA;AAAA;AAAA,cADL,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF,CAtED;;GAAMH,iB;;KAAAA,iB;AAwEN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nconst DropdownComponent = (props) => {\r\n\r\n  const list_options = [\r\n    { \r\n      id: 1, \r\n      name:\"One\"\r\n    },\r\n    { \r\n      id: 2, \r\n      name:\"Two\"\r\n    },\r\n    { \r\n      id: 3, \r\n      name:\"Three\"\r\n    },{ \r\n      id: 4, \r\n      name:\"Four\"\r\n    },{ \r\n      id: 5, \r\n      name:\"Five\"\r\n    }\r\n  ]\r\n  const { isMulti } = props;\r\n  const [option, selectOption] = useState(\"one\");\r\n /*  const [checkedState, setCheckedState] = useState(new Array(list_options.length).fill(false));\r\n  const [selectResult, setSelectResult] = useState(\"\"); */\r\n\r\n  \r\n  const handleSingleSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []);\r\n\r\n  /* const handleMultiSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []); */\r\n\r\n  /* const handleOnChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n  setCheckedState(updatedCheckedState);\r\n */\r\n\r\n  if (isMulti) {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Pick your choice here:\r\n            <select value={option} onChange={handleSingleSelectChange}>\r\n              {list_options.map((options) =>\r\n                <option key={options.id} value={options.name}> {options.name} </option>\r\n              )}\r\n            </select>{\" \"}\r\n          </label>{\" \"}\r\n        </form>{\" \"}\r\n        <div>Your choice is: {option}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n          Pick your choice here:\r\n          {list_options.map((options) =>\r\n                <input key={options.id} value={options.name}> {options.name} </input>\r\n              )}\r\n        {/* <div>Above checkbox is {isChecked ? \"checked\" : \"unchecked\"}. </div>{\" \"} */}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}