{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\"\n  }, {\n    id: 2,\n    name: \"Two\"\n  }, {\n    id: 3,\n    name: \"Three\"\n  }, {\n    id: 4,\n    name: \"Four\"\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  /* const selectResult = new Array(list_options.length); */\n\n  const {\n    isMulti\n  } = props;\n  const [option, setOption] = useState();\n  const [isChecked, setIsChecked] = useState(new Array(list_options.length).fill(false));\n  const [listSelect, setListSelect] = useState([]);\n  const handleSingleSelectChange = useCallback(e => {\n    const selectedChoice = e.target.value;\n    console.log(e.target.value);\n    setOption(selectedChoice);\n  }, []);\n  const handleMultiSelectChange = useCallback(e => {\n    setIsChecked(!isChecked[e.target.value]);\n    console.log(e.target);\n\n    if (isChecked[e.target.value]) {// setListSelect([...listSelect,e.target.value]);\n    }\n  }, [isChecked, listSelect]);\n  return !isMulti ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"custom-select\",\n      value: option,\n      onChange: handleSingleSelectChange,\n      children: list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: options.name,\n        children: options.name\n      }, options.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \"Result: \", option === null || option === void 0 ? void 0 : option.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Pick your choices here:\", list_options.map(options => /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: options.name,\n        onClick: handleMultiSelectChange,\n        checked: isChecked[options.id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), options.name]\n    }, options.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)), \"result:\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listSelect.map(choices => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: choices.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropdownComponent, \"tayeVDKKXXQ7KDm0Pn7XMLgyUB0=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","Button","DropdownComponent","props","list_options","id","name","isMulti","option","setOption","isChecked","setIsChecked","Array","length","fill","listSelect","setListSelect","handleSingleSelectChange","e","selectedChoice","target","value","console","log","handleMultiSelectChange","map","options","choices"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [\r\n    {\r\n      id: 1,\r\n      name: \"One\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  /* const selectResult = new Array(list_options.length); */\r\n  const { isMulti } = props;\r\n  const [option, setOption] = useState();\r\n  const [isChecked, setIsChecked] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  );\r\n  const [listSelect, setListSelect] = useState([]);\r\n\r\n  const handleSingleSelectChange = useCallback((e) => {\r\n    const selectedChoice = e.target.value;\r\n    console.log(e.target.value);\r\n    setOption(selectedChoice);\r\n  }, []);\r\n\r\n  const handleMultiSelectChange = useCallback(\r\n    (e) => {\r\n      setIsChecked(!isChecked[e.target.value]);\r\n      console.log(e.target);\r\n      if (isChecked[e.target.value]) {\r\n        // setListSelect([...listSelect,e.target.value]);\r\n      }\r\n    },\r\n    [isChecked, listSelect]\r\n  );\r\n\r\n  return !isMulti ? (\r\n    <div className=\"container p-5\">\r\n      <select\r\n        className=\"custom-select\"\r\n        value={option}\r\n        onChange={handleSingleSelectChange}\r\n      >\r\n        {list_options.map((options) => (\r\n          <option key={options.id} value={options.name}>\r\n            {options.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      Result: {option?.name}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      Pick your choices here:\r\n      {list_options.map((options) => (\r\n        <select key={options.id}>\r\n          <input\r\n            value={options.name}\r\n            onClick={handleMultiSelectChange}\r\n            checked={isChecked[options.id]}\r\n          />\r\n          {options.name}\r\n        </select>\r\n      ))}\r\n      result:\r\n      <div>\r\n        {listSelect.map((choices) => {\r\n          <div>{choices.name}</div>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}