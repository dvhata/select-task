{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\components\\\\DropdownComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownComponent = props => {\n  _s();\n\n  const list_options = [{\n    id: 1,\n    name: \"One\"\n  }, {\n    id: 2,\n    name: \"Two\"\n  }, {\n    id: 3,\n    name: \"Three\"\n  }, {\n    id: 4,\n    name: \"Four\"\n  }, {\n    id: 5,\n    name: \"Five\"\n  }];\n  /* const selectResult = new Array(list_options.length); */\n\n  const {\n    isMulti\n  } = props;\n  const [option, selectOption] = useState(list_options[0]);\n  const [isChecked, setIsChecked] = useState(new Array(list_options.length).fill(false));\n  /* const [listSelect,setListSelect] = useState(); */\n\n  const list_check = new Array();\n  const handleSingleSelectChange = useCallback(e => {\n    selectOption(e.target.value);\n  }, []);\n  const handleMultiSelectChange = useCallback((index, value) => {\n    setIsChecked(!isChecked[index]);\n    if (isChecked[index]) list_check.push(value);\n  }, []);\n  console.log(list_check);\n\n  if (isMulti) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pick your choice here:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: option,\n            onChange: handleSingleSelectChange,\n            children: [\" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: options.name,\n              children: [\" \", options.name, \" \"]\n            }, options.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Your choice is: \", option, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pick your choices here:\", \" \", list_options.map(options => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: options.name,\n          onChange: handleMultiSelectChange,\n          checked: isChecked[options.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", options.name, \" \"]\n      }, options.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), \"result:\", list_check.map(number => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DropdownComponent, \"tsv8Xs6c7UWg1w9fx6dGNDhqDCc=\");\n\n_c = DropdownComponent;\nexport default DropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownComponent\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/components/DropdownComponent.js"],"names":["React","useState","useCallback","DropdownComponent","props","list_options","id","name","isMulti","option","selectOption","isChecked","setIsChecked","Array","length","fill","list_check","handleSingleSelectChange","e","target","value","handleMultiSelectChange","index","push","console","log","map","options","number"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n/* import { Dropdown, DropdownButton, DropdownItem } from \"react-bootstrap\"; */\r\n\r\nconst DropdownComponent = (props) => {\r\n  const list_options = [\r\n    {\r\n      id: 1,\r\n      name: \"One\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Two\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Three\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Four\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Five\",\r\n    },\r\n  ];\r\n  /* const selectResult = new Array(list_options.length); */\r\n  const { isMulti } = props;\r\n  const [option, selectOption] = useState(list_options[0]);\r\n  const [isChecked, setIsChecked] = useState(\r\n    new Array(list_options.length).fill(false)\r\n  );\r\n  /* const [listSelect,setListSelect] = useState(); */\r\n  const list_check = new Array();\r\n\r\n  const handleSingleSelectChange = useCallback((e) => {\r\n    selectOption(e.target.value);\r\n  }, []);\r\n\r\n  const handleMultiSelectChange = useCallback((index, value) => {\r\n    setIsChecked(!isChecked[index]);\r\n    if (isChecked[index]) list_check.push(value);\r\n  }, []);\r\n\r\n  console.log(list_check);\r\n\r\n  if (isMulti) {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Pick your choice here:\r\n            <select value={option} onChange={handleSingleSelectChange}>\r\n              {\" \"}\r\n              {list_options.map((options) => (\r\n                <option key={options.id} value={options.name}>\r\n                  {\" \"}\r\n                  {options.name}{\" \"}\r\n                </option>\r\n              ))}{\" \"}\r\n            </select>{\" \"}\r\n          </label>{\" \"}\r\n        </form>{\" \"}\r\n        <div> Your choice is: {option} </div>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Pick your choices here:{\" \"}\r\n        {list_options.map((options) => (\r\n          <div key={options.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={options.name}\r\n              onChange={handleMultiSelectChange}\r\n              checked={isChecked[options.id]}\r\n            />{\" \"}\r\n            {options.name}{\" \"}\r\n          </div>\r\n        ))}\r\n        result:\r\n        {list_check.map((number) => {\r\n          <div>{number}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DropdownComponent;\r\n"]},"metadata":{},"sourceType":"module"}