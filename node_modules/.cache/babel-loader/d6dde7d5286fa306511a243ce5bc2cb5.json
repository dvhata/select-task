{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web\\\\React\\\\thuc-tap-rang-dong\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from \"react\";\nimport DropdownComponent from \"./components/DropdownComponent.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list_options = [{\n  id: 1,\n  name: \"One\"\n}, {\n  id: 2,\n  name: \"Two\"\n}, {\n  id: 3,\n  name: \"Three\"\n}, {\n  id: 4,\n  name: \"Four\"\n}, {\n  id: 5,\n  name: \"Five\"\n}];\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = React.useState();\n  const [option, setOption] = React.useState({});\n  const [listSelect, setListSelect] = React.useState([]);\n  const handleSingleSelectChange = React.useCallback(e => {\n    setOption(list_options[e.target.value - 1]);\n  }, []);\n  const handleMultiSelectChange = React.useCallback(e => {\n    const index = listSelect.findIndex(item => (item === null || item === void 0 ? void 0 : item.id) == e.target.value);\n\n    if (index === -1) {\n      setListSelect([...listSelect, list_options[e.target.value - 1]]);\n    } else {\n      setListSelect(list => [...list.filter(item => item.id != e.target.value)]);\n    }\n  }, [listSelect]);\n  const handleClick = React.useCallback(e => {\n    e.target.value === \"single\" ? setMode(false) : setMode(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-5 ml-5\",\n    style: {\n      fontSize: \"50px\",\n      fontFamily: \"font-family: 'Noto Sans JP', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/color/48/000000/continuous-mode--v1.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \"You are in:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-mode\",\n          value: \"single\",\n          children: \"Single Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-mode\",\n          value: \"multi\",\n          children: \"Multiple mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Pick your selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), mode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DropdownComponent, {\n        isMulti: mode,\n        data: list_options,\n        onSelect: handleMultiSelectChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Result:\", listSelect.map(choices => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: choices === null || choices === void 0 ? void 0 : choices.name\n          }, choices.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DropdownComponent, {\n        isMulti: mode,\n        data: list_options,\n        onSelect: handleSingleSelectChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), \"Result: \", option.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tJCMNrKbZN+U+GqMBgFRZDfI/3M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Code/Web/React/thuc-tap-rang-dong/src/App.js"],"names":["React","DropdownComponent","FontAwesomeIcon","list_options","id","name","App","mode","setMode","useState","option","setOption","listSelect","setListSelect","handleSingleSelectChange","useCallback","e","target","value","handleMultiSelectChange","index","findIndex","item","list","filter","handleClick","fontSize","fontFamily","map","choices"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport DropdownComponent from \"./components/DropdownComponent.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst list_options = [\n  {\n    id: 1,\n    name: \"One\",\n  },\n  {\n    id: 2,\n    name: \"Two\",\n  },\n  {\n    id: 3,\n    name: \"Three\",\n  },\n  {\n    id: 4,\n    name: \"Four\",\n  },\n  {\n    id: 5,\n    name: \"Five\",\n  },\n];\n\nfunction App() {\n  const [mode, setMode] = React.useState();\n  const [option, setOption] = React.useState({});\n  const [listSelect, setListSelect] = React.useState([]);\n\n  const handleSingleSelectChange = React.useCallback((e) => {\n    setOption(list_options[e.target.value - 1]);\n  }, []);\n\n  const handleMultiSelectChange = React.useCallback(\n    (e) => {\n      const index = listSelect.findIndex((item) => item?.id == e.target.value);\n\n      if (index === -1) {\n        setListSelect([...listSelect, list_options[e.target.value - 1]]);\n      } else {\n        setListSelect((list) => [\n          ...list.filter((item) => item.id != e.target.value),\n        ]);\n      }\n    },\n    [listSelect]\n  );\n\n  const handleClick = React.useCallback((e) => {\n    e.target.value === \"single\" ? setMode(false) : setMode(true);\n  }, []);\n\n  return (\n    <div className=\"col-md-5 ml-5\" style={{fontSize:\"50px\",fontFamily:\"font-family: 'Noto Sans JP', sans-serif\"}}>\n        <div>\n        <img src=\"https://img.icons8.com/color/48/000000/continuous-mode--v1.png\"/>You are in:\n          <div onClick={handleClick}>\n            <button className=\"button-mode\" value=\"single\">\n              Single Mode\n            </button>\n            <button className=\"button-mode\" value=\"multi\">\n              Multiple mode\n            </button>\n            <br></br>\n            <span>Pick your selection</span>\n          </div>\n        </div>\n        {mode ? (\n          <div>\n            <DropdownComponent\n              isMulti={mode}\n              data={list_options}\n              onSelect={handleMultiSelectChange}\n            />\n            <div>\n              Result:\n              {listSelect.map((choices) => {\n                return <div key={choices.id}>{choices?.name}</div>;\n              })}\n            </div>\n          </div>\n        ) : (\n          <div>\n            <DropdownComponent\n              isMulti={mode}\n              data={list_options}\n              onSelect={handleSingleSelectChange}\n            />\n            Result: {option.name}\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}